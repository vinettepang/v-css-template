@mixin animation($str) {
    @include css3-prefix('animation', $str);
}

@mixin animation-name($name) {
    @include css3-prefix('animation-name', $name);
}


@mixin transition($properties...) {
    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    } @else {
        @include css3-prefix('transition', $what: all, $length: 1s, $easing: ease-in-out);
    }
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@if $import-animations == 'all' or index($import-animations, 'fade') {
@include keyframes(fadeIn) {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@include keyframes(fadeOut) {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

.fadeIn { @include animation-name(fadeIn); }
.fadeOut { @include animation-name(fadeOut); }
}

@if $import-animations == 'all' or index($import-animations, 'bounce') {
@include keyframes(bounce) {
    0%, 20%, 53%, 80%, 100% {
        transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
        @include transform(translate3d(0,0,0));
    }

    40%, 43% {
        transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        @include transform(translate3d(0, -30px, 0));
    }

    70% {
        transition-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);
        @include transform(translate3d(0, -15px, 0));
    }

    90% {
        @include transform(translate3d(0, -4px, 0));
    }
}

@include keyframes(bounceIn) {
    0%, 20%, 40%, 60%, 80%, 100% {
        transition-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    0% {
        opacity: 0;
        @include transform(scale3d(.3, .3, .3));
    }

    20% {
        @include transform(scale3d(1.1, 1.1, 1.1));
    }

    40% {
        @include transform(scale3d(.9, .9, .9));
    }

    60% {
        opacity: 1;
        @include transform(scale3d(1.03, 1.03, 1.03));
    }

    80% {
        @include transform(scale3d(.97, .97, .97));
    }

    100% {
        opacity: 1;
        @include transform(scale3d(1, 1, 1));
    }
}

@include keyframes(bounceOut) {
    20% {
        @include transform(scale3d(.9, .9, .9));
    }

    50%, 55% {
        opacity: 1;
        @include transform(scale3d(1.1, 1.1, 1.1));
    }

    100% {
        opacity: 0;
        @include transform(scale3d(.3, .3, .3));
    }
}


.bounce { @include animation-name(bounce); }
.bounceIn { @include animation-name(bounceIn); }
.bounceOut { @include animation-name(bounceOut); }
}

@if $import-animations == 'all' or index($import-animations, 'flash') {
@include keyframes(flash) {
    0%, 50%, 100% {
        opacity: 1;
    }

    25%, 75% {
        opacity: 0;
    }
}

.flash { @include animation-name(flash); }
}

@if $import-animations == 'all' or index($import-animations, 'shake') {
@include keyframes(shake) {
    0%, 100% {
        @include transform(translate3d(0, 0, 0));
    }

    10%, 30%, 50%, 70%, 90% {
        @include transform(translate3d(-10px, 0, 0));
    }

    20%, 40%, 60%, 80% {
        @include transform(translate3d(10px, 0, 0));
    }
}

.shake { @include animation-name(shake); }
}

@if $import-animations == 'all' or index($import-animations, 'swing') {
@include keyframes(swing) {
    20% {
        @include transform(rotate3d(0, 0, 1, 15deg));
    }

    40% {
        @include transform(rotate3d(0, 0, 1, -10deg));
    }

    60% {
        @include transform(rotate3d(0, 0, 1, 5deg));
    }

    80% {
        @include transform(rotate3d(0, 0, 1, -5deg));
    }

    100% {
        @include transform(rotate3d(0, 0, 1, 0deg));
    }
}

.swing { @include animation-name(swing); }
}

@if $import-animations == 'all' or index($import-animations, 'zoom') {
@include keyframes(zoomIn) {
    0% {
        opacity: 0;
        @include transform(scale3d(.3, .3, .3));
    }

    50% {
        opacity: 1;
    }
}

@include keyframes(zoomOut) {
    0% {
        opacity: 1;
    }

    50% {
        opacity: 0;
        @include transform(scale3d(.3, .3, .3));
    }

    100% {
        opacity: 0;
    }
}

.zoomIn { @include animation-name(zoomIn); }
.zoomOut { @include animation-name(zoomOut); }
}

@if $import-animations == 'all' or index($import-animations, 'rotate') {
@include keyframes(rotateIn) {
    0% {
        transform-origin: center;
        @include transform(rotate3d(0, 0, 1, -200deg));
        opacity: 0;
    }

    100% {
        transform-origin: center;
        @include transform(none);
        opacity: 1;
    }
}

@include keyframes(rotateOut) {
    0% {
        transform-origin: center;
        opacity: 1;
    }

    100% {
        transform-origin: center;
        @include transform(rotate3d(0, 0, 1, 200deg));
        opacity: 0;
    }
}

.rotateIn { @include animation-name(rotateIn); }
.rotateOut { @include animation-name(rotateOut); }
}

@if $import-animations == 'all' or index($import-animations, 'slide') {
@include keyframes(slideInUp) {
    0% {
        @include transform(translateY(100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@include keyframes(slideInDown) {
    0% {
        @include transform(translateY(-100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@include keyframes(slideInLeft) {
    0% {
        @include transform(translateX(-100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@include keyframes(slideInRight) {
    0% {
        @include transform(translateX(100%));
        visibility: visible;
        opacity: 0;
    }

    100% {
        transform: translateX(0);
        opacity: 1;
    }
}

@include keyframes(slideOutUp) {
    0% {
        @include transform(translateY(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateY(-100%);
        opacity: 0;
    }
}

@include keyframes(slideOutDown) {
    0% {
        @include transform(translateY(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateY(100%);
        opacity: 0;
    }
}

@include keyframes(slideOutLeft) {
    0% {
        @include transform(translateX(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateX(-100%);
        opacity: 0;
    }
}

@include keyframes(slideOutRight) {
    0% {
        @include transform(translateX(0));
        opacity: 1;
    }

    100% {
        visibility: hidden;
        transform: translateX(100%);
        opacity: 0;
    }
}

.slideInUp { @include animation-name(slideInUp); }
.slideInDown { @include animation-name(slideInDown); }
.slideInLeft { @include animation-name(slideInLeft); }
.slideInRight { @include animation-name(slideInRight); }
.slideOutUp { @include animation-name(slideOutUp); }
.slideOutDown { @include animation-name(slideOutDown); }
.slideOutLeft { @include animation-name(slideOutLeft); }
}

.animated {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both;
}

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
          animation-iteration-count: infinite;
}

@for $i from 0s through 2s {
    .animate-delay-#{$i/1s}-2 {
        -webkit-animation-delay: $i + 0.2s;
        animation-delay: $i + 0.2s;
    }

    .animate-delay-#{$i/1s}-4 {
        -webkit-animation-delay: $i + 0.4s;
        animation-delay: $i + 0.4s;
    }

    .animate-delay-#{$i/1s}-6 {
        -webkit-animation-delay: $i + 0.6s;
        animation-delay: $i + 0.6s;
    }

    .animate-delay-#{$i/1s}-8 {
        -webkit-animation-delay: $i + 0.8s;
        animation-delay: $i + 0.8s;
    }

    .animate-delay-#{$i/1s + 1} {
        -webkit-animation-delay: $i + 1s;
        animation-delay: $i + 1s;
    }
}